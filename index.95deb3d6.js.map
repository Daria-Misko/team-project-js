{"mappings":"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","sources":["src/js/getPopularNews.js","src/js/weather.js"],"sourcesContent":["import cardMarkup from \"./cardMarkup\";\nimport {initWeather} from './weather'\n\nconst apiKey = '3HHtrx1v9QZUfdmskYGXIqIWRgxdBdcv';\nconst url = `https://api.nytimes.com/svc/mostpopular/v2/emailed/7.json?api-key=${apiKey}`\n\nasync function fetchNYTData() {\n  const response = await fetch(`https://api.nytimes.com/svc/mostpopular/v2/emailed/7.json?api-key=${apiKey}`);\n  const data = await response.json();\n  if (data.status === 'OK') {\n\t  const articles = data.results;\n\t  return articles;\n  } else {\n    throw new Error(error.message);\n  }\n}\n\nasync function getMostPopularArticles() {\n\tconst response = await fetch(`https://api.nytimes.com/svc/mostpopular/v2/emailed/7.json?api-key=${apiKey}`);\n\tconst data = await response.json();\n\tconst { results } = data;\n\tconst resultArticles = []\n\n\tconsole.log(results)\n\tconst image = results[0].media[0]['media-metadata'][2].url;\n\tconsole.log(image);\n\t// let metadata = 'media-metadata';\n\t// console.log(results[0].media[0]['media-metadata'][2].url);\n\n\tconst articles = results.map(({ title, url, published_date, abstract, section, id }) => {\n\t\t// const image = media[0]['media-metadata'][2].url;\n\t\t// console.log(image);\n\t\tconst article = {\n\t\theadline: title,\n\t\tweb_url: url, \n      pub_date: published_date,\n      lead_paragraph: abstract,\n      news_desk: section, \n      bigMobileImg: 'https://static01.nyt.com/images/2023/03/07/multimedia/-01WELL-AGING-EXERCISES21-bzjq/-01WELL-AGING-EXERCISES21-bzjq-mediumThreeByTwo440.jpg',\n      // smallMobileImg: image,\n      // smallSquareImg: image,\n      // bigSquareImg: image,\n      id: id\n\t\t}\n\n\t\tresultArticles.push(article);\n  } ); \n\tconsole.log(resultArticles);\n\treturn resultArticles;\n\n}\n\ngetMostPopularArticles().then(res => {\n\tconst ulEl = document.querySelector('.popular-articles__list');\n\tulEl.replaceChildren(cardMarkup(res));\n\tinitWeather()\n})\n\n// getMostPopularArticles().then(res => {\n// \tconst ulEl = document.querySelector('.popular-articles__list');\n// \tconsole.log(ulEl);\n// \tulEl.insertAdjacentHTML('beforeend', cardMarkup(res));\n// })\n","\r\nconst apiKey = \"73bd6bca6bd522830119f0c6decba840\";\r\nconst KELVIN = 273;\r\n\r\nexport function initWeather() {\r\n\tconst weatherContainer = document.querySelector(\".card__item--weather\")\r\nweatherContainer.innerHTML = `<div class=\"weather-container__all\">\r\n  <div class=\"weather-container\">\r\n    <div class=\"weather-current__container\">\r\n      <div class=\"weather-top-card\">\r\n        <div class=\"temperature-value animate__animated animate__fadeInUp\">\r\n          <p></p>\r\n        </div>\r\n        <div class=\"description-wrapper\">\r\n          <div\r\n            class=\"temperature-description animate__animated animate__fadeInUp\"\r\n          >\r\n            <p>weather description</p>\r\n          </div>\r\n          <div class=\"location animate__animated animate__fadeInUp\">\r\n            <p>Location</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"weather-icon\">\r\n        <img\r\n          src=\"/src/images/svg/unknown.png\"\r\n          alt=\"\"\r\n          height=\"155\"\r\n          width=\"165\"\r\n        />\r\n      </div>\r\n      <div class=\"day animate__animated animate__fadeInUp\">\r\n        <p></p>\r\n      </div>\r\n      <div class=\"date animate__animated animate__fadeInUp\">\r\n        <p></p>\r\n      </div>\r\n      <div class=\"week-weather animate__animated animate__fadeInUp\">\r\n        <button class=\"weather-button\" type=\"button\">weather for week</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"weather-week__container\">\r\n    <div class=\"weather-week__list\">\r\n      <p>Weather for week</p>\r\n      <ul class=\"weather-week__forecast\">\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"date animate__animated animate__fadeInUp\">\r\n      <button class=\"weather-week-close-button\" type=\"button\">back</button>\r\n    </div>\r\n  </div>\r\n</div>`\r\n\r\n\r\nconst tempElement = document.querySelector(\".temperature-value p\");\r\nconst descElement = document.querySelector(\".temperature-description p\");\r\nconst locationElement = document.querySelector(\".location p\");\r\nconst iconElement = document.querySelector(\".weather-icon\");\r\nconst dayElement = document.querySelector(\".day p\");\r\nconst dateElement = document.querySelector(\".date p\");\r\nconst button = document.querySelector(\".weather-button\");\r\nconst weatherWeek = document.querySelector(\".weather-week__container\");\r\nconst weatherCurrent = document.querySelector(\".weather-current__container\");\r\nconst closeBtn = document.querySelector(\".weather-week-close-button\")\r\nconst weatherWeekDayForecast = document.querySelector(\".weather-week__forecast\")\r\n\r\nbutton.addEventListener('click', onClick)\r\ncloseBtn.addEventListener('click', onClose)\r\n\r\nconst date = new Date()\r\nlet currentdate = date.toLocaleDateString('en-gb', { day: \"numeric\", month: \"short\", year: \"numeric\" })\r\nconst weekday = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\r\nlet day = weekday[date.getDay()];\r\n\r\nconst weather = {\r\n\ttemperature: {\r\n\t\tvalue: \"\",\r\n\t\tunit: \"celsius\"\r\n\t},\r\n\tdescription: \"\",\r\n\ticonId: \"\",\r\n\tcity: \"\",\r\n\tcountry: \"\",\r\n\tday: `${date}`,\r\n\tdata: `${day}`\r\n};\r\n\r\ndayElement.insertAdjacentHTML('beforeend', `${day}`); \r\ndateElement.insertAdjacentHTML('beforeend', `${currentdate}`); \r\n\r\nif('geolocation' in navigator){\r\n    navigator.geolocation.getCurrentPosition(setPosition, showError);\r\n}else{\r\n    console.log(error);\r\n}\r\n\r\nfunction setPosition(position) {\r\n\tif (position && position.coords) {\r\n\t\tlet latitude = position.coords.latitude;\r\n\t\tlet longitude = position.coords.longitude;\r\n\r\n\t\tgetWeather(latitude, longitude);\r\n\t\tforecast(latitude, longitude);\r\n\t} else {\r\n\t\tconsole.log(\"Position data not available.\");\r\n\t}\r\n\r\n}\r\n\r\nfunction showError(error) {\r\n\tconsole.log(`nothing`);\r\n   //  notificationElement.style.display = \"block\";\r\n   //  notificationElement.innerHTML = `<p> ${error.message} </p>`;\r\n}\r\n\r\nfunction getWeather(latitude, longitude) {\r\n   let api = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}`;\r\n    \r\n    fetch(api)\r\n        .then(function(response){\r\n            let data = response.json();\r\n\t\t\t  return data;\r\n        })\r\n\t\t .then(function (data) {\r\n\t\t\t// console.log(data);\r\n\t\t\tweather.temperature.value = Math.floor(data.main.temp - KELVIN);\r\n\t\t\tweather.description = data.weather[0].description;\r\n\t\t\tweather.iconId = data.weather[0].icon;\r\n\t\t\tweather.city = data.name;\r\n\t\t\tweather.country = data.sys.country;\r\n        })\r\n        .then(function(){\r\n            displayWeather();\r\n        });\r\n}\r\n\r\nfunction displayWeather() {\r\n   iconElement.innerHTML = `<img src=\"http://openweathermap.org/img/wn/${weather.iconId}@4x.png\" height= \"155\"\r\n\twidth= \"165\"/>`;\r\n   tempElement.insertAdjacentHTML('beforeend', `${weather.temperature.value}°`);\r\n   descElement.innerHTML = `${weather.description}`;\r\n\tlocationElement.innerHTML = `${weather.city}`;\r\n}\r\n\r\n\r\n\r\nfunction forecast(latitude, longitude) {\r\n\tconst newKey = 'ba7fddf449339701f9df702aeb87be1d'\r\n\tconst API_URL = `http://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${newKey}`;\r\n    \r\n\tfetch(API_URL)\r\n  .then(response => response.json())\r\n  .then(data => {\r\n\t  const dataArray = data.list;\r\n\t  const groupedData = {};\r\n\t  for (let i = 0; i < dataArray.length; i++) {\r\n      const date = dataArray[i].dt_txt.slice(0, 10);\r\n      if (!groupedData[date]) {\r\n\t\t\tgroupedData[date] = {\r\n\t\t\tdate: date,\r\n          minTemp: dataArray[i].main.temp,\r\n          maxTemp: dataArray[i].main.temp,\r\n          weather: dataArray[i].weather[0].description\r\n        };\r\n      } else {\r\n        if (dataArray[i].main.temp < groupedData[date].minTemp) {\r\n          groupedData[date].minTemp = dataArray[i].main.temp;\r\n        }\r\n        if (dataArray[i].main.temp > groupedData[date].maxTemp) {\r\n          groupedData[date].maxTemp = dataArray[i].main.temp;\r\n        }\r\n      }\r\n    }\r\n\t  console.log(groupedData);\r\n\r\n\t  const groupedDataPerDay = {\r\n  \"2022-03-05\": {\r\n    date: \"2022-03-05\",\r\n    minTemp: 5,\r\n    maxTemp: 10,\r\n    weather: \"Cloudy\"\r\n\t \r\n  },\r\n  \"2022-03-06\": {\r\n    date: \"2022-03-06\",\r\n    minTemp: 8,\r\n    maxTemp: 12,\r\n    weather: \"Rainy\"\r\n  }\r\n};\r\nweatherWeekDayForecast.innerHTML = '';\r\n// перебираємо ключі в об'єкті\r\n\t  Object.keys(groupedData).forEach(date => {\r\n\t\t  const data = groupedData[date];\r\n\t\t  const dateValue = data.date;\r\n\t\t  \r\n\t\t\tconst datePotoch = new Date(dateValue);\r\n\t\t\tconst formattedDate = datePotoch.toLocaleString('en-GB', { day: 'numeric', month: 'short', year: 'numeric' });\r\n\r\n  \t\t\tconst minTempValue = Math.floor(data.minTemp - KELVIN);\r\n  \t\t\tconst maxTempValue = Math.floor(data.maxTemp - KELVIN);\r\n\t\t  \tconst weatherValue = data.weather;\r\n  \r\n\t\t  \r\n\t\t//   console.log(`Дата: ${formattedDate}, Мінімальна температура: ${minTempValue}, Максимальна температура: ${maxTempValue}, Опис погоди: ${weatherValue}`);\r\n\t\t  \r\n\t\t  const listItem = document.createElement('li');\r\n\t\t  listItem.classList.add('weather-week__item')\r\n        listItem.innerHTML = `<span class=\"weather-week__value\">${formattedDate}</span>:<br> Min. temp: <span class=\"weather-week__value\">${minTempValue}</span>, Max. temp: <span class=\"weather-week__value\">${maxTempValue}</span><br> Descr.: <span class=\"weather-week__value\">${weatherValue}</span>`;\r\n        weatherWeekDayForecast.appendChild(listItem);\r\n\r\n});\r\n\r\n\t  \r\n\t  \r\n\t  \r\n  })  \r\n  .catch(error => console.log(error));\r\n\t}\r\n\r\n\tweatherWeek.classList.add('is-hidden');\r\n\r\nfunction onClick(e) {\r\n\te.preventDefault();\r\n\tweatherCurrent.classList.add('is-hidden');\r\n\tif (weatherWeek.classList.contains('is-hidden')) {\r\n\t\tweatherWeek.classList.remove('is-hidden')\r\n\t}\r\n}\r\n\r\nfunction onClose(e) {\r\n\te.preventDefault();\r\n\tweatherWeek.classList.add('is-hidden');\r\n\tif (weatherCurrent.classList.contains('is-hidden')) {\r\n\t\tweatherCurrent.classList.remove('is-hidden')\r\n\t}\r\n}\r\n}"],"names":["$bpxeT","parcelRequire","$b7c37e8f14632f7d$var$apiKey","$b7c37e8f14632f7d$var$KELVIN","$b7c37e8f14632f7d$export$fe12e2131efe2516","document","querySelector","innerHTML","tempElement","descElement","locationElement","iconElement","dayElement","dateElement","button","weatherWeek","weatherCurrent","closeBtn","weatherWeekDayForecast","addEventListener","e","preventDefault","classList","add","contains","remove","date1","Date","currentdate","toLocaleDateString","day","month","year","getDay","weather","temperature","value","unit","description","iconId","city","country","concat","data","insertAdjacentHTML","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","api","fetch","then","response","json","Math","floor","main","temp","icon","name","sys","getWeather","newKey","API_URL","dataArray","list","groupedData","i","length","date","dt_txt","slice","minTemp","maxTemp","console","log","Object","keys","forEach","_$data","dateValue","formattedDate","toLocaleString","minTempValue","maxTempValue","weatherValue","listItem","createElement","appendChild","catch","error","forecast","$9b12918259623da8$var$apiKey","$9b12918259623da8$var$_getMostPopularArticles","$parcel$interopDefault","$2TvXO","mark","_callee","results","resultArticles","image","_ctx","sent","media","url","map","param","article","headline","title","web_url","pub_date","published_date","lead_paragraph","abstract","news_desk","section","bigMobileImg","id","push","apply","this","arguments","$9b12918259623da8$var$getMostPopularArticles","res","replaceChildren","$7iFtI","default"],"version":3,"file":"index.95deb3d6.js.map"}